plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'war'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
ext {
    versions = [
            lombok            : '1.18.32',
            mapstruct         : '1.5.3.Final',
            junitJupiter      : '5.10.2',
            log               : '2.23.1',
            commonsCollections: '4.4',
            commonsLang       : '3.13.0',
            mockitoJunit      : '5.11.0',
            junit             : '4.13.2',
            postgresql        : '42.7.1',
            assertjCore       : '3.25.3',
            junitJupiterApi   : '5.10.2',
            junitJupiterEngine: '5.10.0',
            testcontainers    : '1.19.7',
            liquibase         : '4.27.0',
            servlet_api       : '4.0.1',
            aspectjrt         : '1.9.21.1',
            swaggerVersion    : '2.9.2',
            swaggerAnnotation : '1.6.6',
            jaksonVersion     : '2.17.0',
            hibernateValidator: '6.0.0.Final',
            javaxValidation   : '2.0.1.Final',
            jakartaValidation : '3.0.2',
            aspectVersion     : '1.9.8',
            springVersion     : '5.3.30'
    ]
}
dependencies {

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.5.0'

    // Validation
    implementation "org.hibernate.validator:hibernate-validator:${versions.hibernateValidator}"
    implementation "javax.validation:validation-api:${versions.javaxValidation}"

    // Db
    implementation "org.postgresql:postgresql:${versions.postgresql}"
    implementation "org.liquibase:liquibase-core:${versions.liquibase}"

    // Utils
    implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    implementation "org.apache.commons:commons-collections4:${versions.commonsCollections}"
    implementation "org.apache.commons:commons-lang3:${versions.commonsLang}"

    // Tests
    implementation "org.assertj:assertj-core:${versions.assertjCore}"
    implementation "org.mockito:mockito-junit-jupiter:${versions.mockitoJunit}"
    implementation "org.testcontainers:junit-jupiter:${versions.testcontainers}"
    implementation "org.testcontainers:postgresql:${versions.testcontainers}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junitJupiter}"
    testCompileOnly "junit:junit:${versions.junit}"
    implementation "org.junit.jupiter:junit-jupiter-api:${versions.junitJupiterApi}"
    implementation "org.junit.jupiter:junit-jupiter-engine:${versions.junitJupiterEngine}"
}
test {
    useJUnitPlatform()
}